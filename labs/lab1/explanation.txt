Πώς λειτουργεί το πρόγραμμα:

Έτσι όπως λύσαμε το πρόβλημα στην τάξη, βάζουμε χειροκίνητα τον χρόνο για κάθε κίνηση και πρέπει να σκεφτόμαστε τα μαθηματικά (1 δευτερόλεπτο η κίνηση + 2.5 τα δευτερόλεπτα για τις προηγούμενες κινήσεις, άρα πρέπει να βάλω time <= 3.5). Αν όμως αλλάξω τον χρόνο για τις προηγούμενες κινήσεις, τότε πρέπει να αλλάξω τον χρόνο και στις επόμενες, που δεν είναι βολικό. Επομένως, σκέφτομαι κάποιον τρόπο να έχω τις κινήσεις ανεξάρτητα από τις υπόλοιπες.

Κάθε κίνηση αποτελείται από 3 τιμές: Η ταχύτητα του αμαξιού (speed), η γωνία των ροδών (angle), και ο χρόνος που θα την κάνουμε (time), Έτσι, κάθε κίνηση μπορεί να περιγραφεί με αυτές τις τρεις τιμές [speed, angle, time].
Λίστα είναι ένα αντικείμενο που χωράει πολλά πράγματα μαζί. Όπως εξηγήσαμε πάνω, κάθε κίνηση μπορεί να αναπαραστεί ως λίστα 3 αντικειμένων [speed, angle, time]. Τα [ και ] είναι συμβολισμός για να δείξουν ότι μιλάμε για λίστα.
Το καλό με τις λίστες είναι ότι μπορούν να έχουν αυθαίρετο αριθμό από αντικείμενα (2, 3, 10, 50000000). Επίσης, τα αντικείμενά τους δε χρειάζεται να είναι μόνο ακέραιοι. Μπορούν να είναι και τα ίδια λίστες. Έτσι, εμείς για να αναπαραστήσουμε ένα σχήμα, χρησμοποιούμε μια μεταβλητή moves_to_execute, που είναι μια λίστα από λίστες. Δηλαδή έχει κάποια αντικείμενα (εδώ κινήσεις), και κάθε αντικείμενο είναι μια λίστα από αντικείμενα (εδώ κάθε κίνηση είναι 3 αριθμοί).

Μια λίστα συνήθως ξεκινάει κενή (το δηλώνουμε με δύο κολλητά [] έτσι: list = []) και μεγαλώνει από τα αριστερά προς τα δεξιά προσθέτωντας αντικέιμενα. Για να προσθέσω σε μια λίστα ένα αντικείμενο χρησιμοποιώ τη συνάρτηση append(αντικείμενο). Έτσι, αν έχω μια λίστα λιστών moves και τις τιμές speed, angle, time, θα προσθέσω την κίνηση μου έτσι: moves.append([speed, angle, time]). 

Για να πάρω ένα αντικέιμενο χρησιμοποιώ τον δείκτη που δείχνει τη σειρά του. Η σειρά ξεκινάει από το 0. Έτσι, το πρώτο (αριστερότερο) αντικείμενο είναι το list[0], το δεύτερο είναι το list[1], το τρίτο το list[2], κ.ο.κ.

Για να διαγράψω ένα αντικείμενο χρησιμοποιώ τη συνάρτηση pop. Για να διαγράψω το πρώτο αντικείμενο χρησιμοποιώ list.pop(0), για το δεύτερο την εντολή list.pop(1) κ.ο.κ. Όταν σβήσω ένα αντικείμενο όταν τα άλλα πηγαίνουν μπροστά, δηλαδή αν σβήσω το πρώτο αντικείμενο, το τότε δεύτερο (δείκτης 1) θα γίνει το πρώτο (δείκτης 0), το τότε τρίτο (δείκτης 2) θα γίνει το δεύτερο (δείκτης 1) κ.ο.κ.

Τέλος, αν θέλω να πάρω μια τιμή από ένα αντικείμενο, θέλω και έναν δεύτερο δείκτη. Π.χ. αν θέλω την πρώτη τιμή (που είπαμε ότι συμβολίζει την ταχύτητα) από την πρώτη κίνηση, θα πω speed = list[0][0]. Αν θέλω τη γωνία: angle = list[0][1], αν θέλω χρόνο: list[0][2]. 

Στο πρόγραμμα έχω μια λίστα από λίστες που ονομάζω moves_to_execute, και σε αυτήν την λίστα κρατάω τις τριάδες [speed, angle, time] για κάθε κίνηση που μένει να εκτελέσω εκείνη τη στιγμή. Έτσι, όταν πατάω ένα κουμπί, κάνω append τις αντίστοιχες τριάδες με τη σωστή σειρά, και τις εκτελώ μια μια, αφαιρόντας τες από τη λίστα όταν περάσει ο κατάλληλος χρόνος.
